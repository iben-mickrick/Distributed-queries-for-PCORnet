/*QUERY TITLE: WEIGHT TRAJECTORY STUDY 

PURPOSE: CREATE DATA SET ON PATIENTS AGED 9-17 AT FIRST ENCOUNTER WITH AT LEAST 2 ENCOUNTERS WITH POPULATED VITALS
		 DATA (HEIGHT AND WEIGHT OR BMI) 6 MONTHS (180 DAYS) APART FROM EACH OTHER WITH NO KNOWN DISEASE RELATED TO EXCESSIVE WEIGHT LOSS OR GAIN 
		(FULL LIST OF DISEASE IN CODE) 

ITENDED USE: RUN PAIRED-T-TEST ON FIRST AND LAST VITAL RECORDS & MIXED LINEAR MODEL ON PATIENTS WITH AT LEAST 3 RECORDS ACROSS 4 DISTINCT INTERVALS

PROGRAMMERS: IBEN M. RICKET

NOTES FOR REPLICATION
	-SOURCE=CDM CLINICAL DATA 
	-STEP 9 BREAKS THE DATA INTO 4, 6-MONTH INTERVALS. THESE INTERVALS WERE DETERMINED BASED ON THE SOURCE DATA ONLY HAVING ~2YEARS WORTH OF DATA. 
	 WHEN REPLICATING, IT'S ADVISIBLE TO CONSIDER THE MOST APPROPRIATE WAY TO EVENLY DIVIDE DATA INTO 4 TIME PERIODS. THE TIME PERIOD COULD BE WIDENED 
	 IF SOURCE DATA HAS ENOUGH RETROSPECTIVE DATA.
	-STEP 11 REQUIRES THE ANALYST TO USE CDC SAS RESOURCES TO DERIVE THE PERCENTILE DATASET. THIS REQUIRES CREATING THE REDIF LIBRARY BELOW AND ENSURING 
	 THE APPROPIATE SAS FILE FROM THE CDC IS SAVED. THIS CDC SAS FILE (CDCREF_D) WAS PROVIDED WITH THIS PROGRAM CODE PACKAGE. 
	-STEP 18A-C QUICKLY CHECK THE AVAILABLE SAMPLE SIZE. THIS WAS USED TO INFORM THE FINAL STUDY POPULATION. UPON REPLICATION, IT IS ADVISIBLE TO CONSIDER
	 THE AVAILABLE SAMPLE SIZE FOR STUDY POPULATION 1 AND STUDY POPULATION 2. IF THE SAMPLE SIZE FOR STUDY POPULATION IS REASONABLE, IT IS ADIVISBLE TO
	 MOVE FORWARD USING THE LINEAR MIXED MODEL. IF STUDY POPULATION 2 SAMPLE SIZE IS NOT SUFFICIENT, IT IS ADVISIBLE TO USE STUDY POPULATION 1. THE CHOICE
	 OF INTERVAL PERIODS FOR TESTING CAN BE CHANGED. 
*/
/*LIBRARIES*/

/*CONNECT TO SOURCE CLINICAL DATA*/
LIBNAME DataCDM 'D:\CDM Data_PATH-Azara\CDMs\Azara Formatted CDM\';
RUN;
/*LIBRARY TO STORE STUDY DATA*/
LIBNAME STUDY 'D:\Study Files\AllianceChicago\02.20.18\';
RUN;
/*LIBRARY FOR CDC SAS FILE*/
libname refdir 'D:\Study Files\AllianceChicago\BMI PERCENTILES\';
run;
/*LIBRARY FOR STORING CDC PERCENTILE OUTPUT FILES*/
LIBNAME CDC1 'D:\Study Files\AllianceChicago\CDC1\';
RUN;

/*STEP 1: IDENIFY FIRST AND LAST ADMIT_DATE TO IDENTIFY FIRST AND LAST RECORDED HEIGHT/WEIGHT & BMI RECORDINGS*/
/*STEP 1A. SORT SOURCE ENCOUNTER DATA */
PROC SORT DATA=DATACDM.ENCOUNTER OUT=STUDY.ENCOUNTER NODUPRECS;
BY PATID ADMIT_DATE;
RUN;
/*STEP 1B. IDENTIFY FIRST AND LAST ADMIT DATE*/
DATA STUDY.ENCOUNTER1 (KEEP=PATID FIRSTADMIT);
SET STUDY.ENCOUNTER;
BY PATID ADMIT_DATE;
RETAIN FIRSTADMIT;
FORMAT FIRSTADMIT LASTADMIT DATE9.;
if first.patid and last.patid then do;
	firstadmit=admit_date;
	lastadmit=admit_date;
	output;
end;
else if first.patid then firstadmit=admit_date;
else if last.patid then do;
	lastadmit=admit_date;
output;
end;
run;
/*STEP 2 PULL BIRTH_DATE FOR ALL PATIENTS*/
/*STEP 2A. SORT ORIGINAL DEMOGRAPHIC FILE BY PATID*/
PROC SORT DATA=DATACDM.DEMOGRAPHIC;
BY PATID;
RUN;
/*STEP 2B. CREATE STUDY.BDAY WITH PATID AND BIRTH_DATE VARIABLES*/
DATA STUDY.BDAY (KEEP=PATID BIRTH_DATE);
SET DATACDM.DEMOGRAPHIC;
BY PATID BIRTH_DATE;
RUN;
/*STEP 2C. MERGE DATACDM.BDAY DATASET WITH ENCOUNTER TABLE */
DATA STUDY.AGE;
MERGE STUDY.ENCOUNTER1 STUDY.BDAY;
BY PATID;
RUN;
/*STEP 2D. CALCULATE AGE FROM FIRST ADMIT DATE*/
DATA STUDY.AGE1;
SET STUDY.AGE;
BY PATID;
IF FIRSTADMIT^=. AND BIRTH_DATE^=. THEN DO;
AGE=INT((FIRSTADMIT-BIRTH_DATE)/365.25);
END;
RUN;
/*QUICK CHECK ON DISTINCT PATIENT RECORDS | N=223,580*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM STUDY.AGE1;
QUIT;
/*STEP 2E. REMOVE PATIENT RECORDS IF PATIENT AGE IS LESS THAN 9 OR GREATER THAN 18*/
DATA STUDY.AGE2;
SET STUDY.AGE1;
IF AGE<9 OR AGE>18 THEN DELETE;
RUN;
/*QUICK CHECK ON DISTINCT PATIENT RECORDS | N=10,834*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM STUDY.AGE2;
QUIT;
/*STEP 3: REMOVE PATIENTS WITH ANY HISTORY OF EXCLUSION CRITERIA */
/*STEP 3A. MERGE SOURCE DIAGNOSIS AND STUDY.AGE2 DATAFILES*/
PROC SORT DATA=DATACDM.DIAGNOSIS;
BY PATID;
RUN;
/*STEP 3B. REMOVE UNNECESSARY VARIABLES FROM STUDY.DIAGNOSIS TABLE*/
DATA STUDY.DIAGNOSIS (KEEP=PATID DX);
SET DATACDM.DIAGNOSIS;
BY PATID;
RUN;
/*STEP 3C. MERGE STUDY.DIAGNOSIS TABLE AND STUDY.AGE2 FILE*/
DATA STUDY.DIAGNOSIS1 (KEEP=PATID AGE DX);
MERGE STUDY.AGE2(IN=A) STUDY.DIAGNOSIS (IN=B);
BY PATID;
IF A;
RUN;
/*QUICK CHECK ON NUMBER OF PATIENTS IN STUDY.DIAGNOSIS1 FILE |N=10,834*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS DXPAT
	FROM STUDY.DIAGNOSIS1;
QUIT;
/*STEP 3D. DROP PATIDS IF PATIENT HAS RECORD OF EXCLUSION*/
DATA STUDY.EXCLUSION;
SET STUDY.DIAGNOSIS1;
IF DX^=. THEN DO;
IF DX IN ('759.81', '759.89', '758.7', '758.6', '253.4', '253.4', '253.3','253.8', '255.0', '244.9', '277.0', '259.1', '765.0', '765.00', '765.01',
'765.02', '765.03', '765.1', '765.10', '765.11', '765.12', '765.13', '765.2', '765.20','765.21', '765.22', '765.23', '765.24', '766.0', '766.1', 'V22.2', 'Z33.1', 'P08.0', 'P07.1' ,
'P07.3', 'P07.0', 'P07.2', 'E30.1', 'E84', 'E84.0', 'E84.1', 'E84.11', 'E84.19', 'E84.8', 'E84.9', 
'E03', 'E03.0',  'E03.1', 'E03.2','E03.3','E03.4','E03.5','E03.8','E03.9', 'Q87.1', 'Q87.3', 'Q87.89', 'Q89.8', 
'Q87.0', 'Q98.4', 'Q96.8', 'E23', 'E23.0', 'E23.1', 'E23.2', 'E23.3', 'E23.6', 'E23.7',
'E24', 'E24.0', 'E24.1', 'E24.2', 'E24.3', 'E24.4', 'E24.8', 'E24.9')
THEN INCLUSION=0;
ELSE INCLUSION=1;
END;
RUN;
/*FREQUENCY TO DETERMINE BASE STUDY POPULATION, CREATE DATASET WITH PATID OF INELIGIBLE PATIENTS | */
PROC FREQ DATA=STUDY.EXCLUSION;
TABLE PATID*INCLUSION/OUT=STUDY.DROP;
WHERE INCLUSION=0;
RUN;
/*STEP 3E. CREATE TABLE WHERE INELGIBLE PATIDS ARE REMOVED FROM BASE STUDY POPULATION*/
PROC SQL;
	CREATE TABLE STUDY.INCLUSION AS
	SELECT DISTINCT PATID FROM STUDY.DIAGNOSIS1 WHERE PATID NOT IN (SELECT PATID FROM STUDY.DROP);
QUIT;
/*CHECK MATH ON NEWLY CREATE STUDY.INCLUSION TABLE N=10,797*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM STUDY.INCLUSION;
QUIT;
/*STEP 4. REJOIN STUDY.INCLUSION TO CDM ENCOUNER TABLE*/
PROC SORT DATA=DATACDM.ENCOUNTER;
BY PATID;
RUN;
/*STEP 4A. MERGE STUDY.INCLUSION WITH ORIGINAL CDM ENCOUNTER TABLE*/
DATA STUDY.ENCOUNTER2 (KEEP=PATID ADMIT_DATE);
MERGE STUDY.INCLUSION (IN=A) DATACDM.ENCOUNTER (IN=B);
BY PATID;
IF A;
RUN;
/*STEP 4B.SORT DATASET BY PATID AND ADMIT_DATE*/
PROC SORT DATA=STUDY.ENCOUNTER2 OUT=STUDY.ENCOUNTER3 ;
BY PATID ADMIT_DATE;
RUN;
/*STEP 4C.COMPUTE DIFFERENCE IN ADMIT DATE USING LAG (OR DIF) FUNCTION*/
DATA STUDY.ENCOUNTERNEW;
SET STUDY.ENCOUNTER3;
BY PATID;
RETAIN R_ADMIT_DATE;
R_ADMIT_DATE=LAG(ADMIT_DATE);
IF NOT FIRST.PATID THEN DO;
	DIFF_ADMIT_DATE=ADMIT_DATE-R_ADMIT_DATE;
	END;
	DROP R_;;
RUN;
/*STEP 4D. DETERMINE ELIGIBILITY BASED BASED ON PATIENTS WITH TWO ENCOUNTERS MORE THAN 6 MONTHS APART*/
DATA STUDY.ENCOUNTERNEW1;
SET STUDY.ENCOUNTERNEW;
IF DIFF_ADMIT_DATE^=. THEN DO;
IF DIFF_ADMIT_DATE>=180 THEN ELIG=1;
IF DIFF_ADMIT_DATE<180 THEN ELIG=0;
END;
RUN;
/*STEP 4E. DETERMINE NUMBER OF UNIQUE PATIENTS ARE IN FINAL STUDY POOL | N=2,735*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM STUDY.ENCOUNTERNEW1
	WHERE ELIG=1;
QUIT;
/*STEP 4F. OUTPUT PATIENTS WITH ELIG=1 FLAG*/
DATA STUDY.ENCOUNTERFINAL (KEEP=PATID) ;
SET STUDY.ENCOUNTERNEW1;
IF ELIG=1 THEN OUTPUT;
RUN;
/*CHECK FINAL STUDY POPULATION n=2,735*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID))AS PATIENTS
	FROM STUDY.ENCOUNTERFINAL;
QUIT; 
/*STEP 5. LINK STUDY PATIDS TO RELEVANT CLINICAL TABLES*/
/*STEP 5A. SORT THE PATID LIST OF ELIGIBLE PATIENTS (SOURCE ENCOUNTER & VITAL TABLES)*/
PROC SORT DATA=STUDY.ENCOUNTERFINAL;
BY PATID;
RUN;
PROC SORT DATA=DATACDM.VITAL;
BY PATID;
RUN;
/*STEP 5B. MERGE PATID LIST WITH VITALS, ENCOUNTER, DEMOGRAPHIC TABLE*/
DATA STUDY.VITALS;
MERGE STUDY.ENCOUNTERFINAL (IN=A) DATACDM.ENCOUNTER (IN=B) DATACDM.DEMOGRAPHIC (IN=C) DATACDM.VITAL (IN=D);
BY PATID;
IF A;
RUN;
/*QUICK CHECK ON UNIQUE PATIENT RECORDS FOLLOWING MERGE n=2,735 */
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM STUDY.VITALS;
QUIT;
/*STEP 6. TRANSFORM DATA FOR CDC BMI PERCENTILES*/
DATA STUDY.VITALS1 (KEEP=PATID ENCOUNTERID ADMIT_DATE BIRTH_DATE HISPANIC RACE SEX VITALID MEASURE_DATE HT WT HEIGHT WEIGHT HEADCIR ORIGINAL_BMI);
SET STUDY.VITALS;

IF SEX='M' THEN SEX1=1;
IF SEX='F' THEN SEX1=2;

IF WT^=. THEN DO;
WEIGHT=(WT*0.453592);
END;

IF HT^=. THEN DO;
HEIGHT=(HT*2.54);
END;

HEADCIR=.;

DROP SEX;
RENAME SEX1=SEX;

RUN;
/*STEP 7. MERGE BACK WITH STUDY.AGE2 TO GRAB AGE AT FIRST ENCOUNTER FOR STUDY POPULATION */
/*STEP 7A. SORT STUDY.AGE2 BY PATID*/
PROC SORT DATA=STUDY.AGE2;
BY PATID;
RUN;
/*STEP ZB. MERGE SOURCE VITALS DATA WITH STUDY.AGE2*/
DATA STUDY.VITALTOTAL ;
MERGE STUDY.VITALS1 (IN=A) STUDY.AGE2(IN=B);
BY PATID;
IF A;
RUN;
/*STEP 8. CALCULATE AGE IN MONTHS FROM AGE IN YEARS*/
DATA STUDY.VITALTOTAL1;
SET STUDY.VITALTOTAL;
IF AGE^=. THEN DO;
agemos=(age*12);
END;
RUN;
/*STEP 9A.BREAK INTO 4 INTERVALS BASED ON MEASURE DATA*/
DATA STUDY.VITALTOTAL2;
SET STUDY.VITALTOTAL1;
IF MEASURE_DATE^=. THEN DO;
IF MEASURE_DATE>='15AUG2015'D AND MEASURE_DATE<='14FEB2016'D THEN INTERVAL=1;
IF MEASURE_DATE>='15FEB2016'D AND MEASURE_DATE<='14AUG2016'D THEN INTERVAL=2;
IF MEASURE_DATE>='15AUG2016'D AND MEASURE_DATE<='14FEB2017'D THEN INTERVAL=3;
IF MEASURE_DATE>='15FEB2017'D AND MEASURE_DATE<='14AUG2017'D THEN INTERVAL=4;
END;
RUN;
/*STEP 9B. CHECK DISTRIBUTION OF INTERVAL VARIABLE*/
PROC FREQ DATA=STUDY.VITALTOTAL2;
TABLE INTERVAL;
RUN;
/*CHECK NUMBER OF UNIQUE PATIENTS n=2735*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS 
	FROM STUDY.VITALTOTAL2;
QUIT;
/*STEP 10. CREATE 4 UNIQUE DATA SETS FOR EACH INTERVAL*/
/*STEP 10A. INTERVAL 4*/
DATA STUDY.INTERVAL4;
SET STUDY.VITALTOTAL2;
IF INTERVAL=4 THEN OUTPUT;
RUN;
/*CHECK NUMBER OF UNIQUE PATIENTS n=1600*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS 
	FROM STUDY.INTERVAL4;
QUIT;
/*STEP 10B. INTERVAL 3*/
DATA STUDY.INTERVAL3;
SET STUDY.VITALTOTAL2;
IF INTERVAL=3 THEN OUTPUT;
RUN;
/*CHECK NUMBER OF UNIQUE PATIENTS n=1797*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS 
	FROM STUDY.INTERVAL3;
QUIT;
/*STEP 10C. INTERVAL 2*/
DATA STUDY.INTERVAL2;
SET STUDY.VITALTOTAL2;
IF INTERVAL=2 THEN OUTPUT;
RUN;
/*CHECK NUMBER OF UNIQUE PATIENTS n=1434*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS 
	FROM STUDY.INTERVAL2;
QUIT;
/*STEP 10D. INTERVAL 1*/
DATA STUDY.INTERVAL1;
SET STUDY.VITALTOTAL2;
IF INTERVAL=1 THEN OUTPUT;
RUN;
/*CHECK NUMBER OF UNIQUE PATIENTS n=1806*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS 
	FROM STUDY.INTERVAL1;
QUIT;
/*RUN CDC PERCENTILES ON EACH INTERVAL PERIOD*/
/*STEP 11: 
TAKE STUDY.INTERVAL1, COPY INTO WORK AND RENAME TO 'MYDATA'
THEN RUN MACRO BELOW (MAKE SURE REFDIR LIBRARY IS CREATED WITH THE APPROPRIATE SAS FILE SAVED IN IT (CDCREF_D)
REPEAT STEP FOR INTERVAL 2, 3 AND 4 AND THE ULTIMATE RESULT IS 4 UNIQUE DATASETS (ONE PER INTERVAL) WITH CDC CALCULATED PERCENTILES 
*/
%INCLUDE 'D:\Study Files\AllianceChicago\BMI PERCENTILES\REFDIR.SAS';
RUN;
/*STEP 12A: IDENTIFY FIRST RECORDS FROM INTERVAL1 DATASET*/
PROC SORT DATA=CDC1._CDCDATA_INT1;
BY PATID BMIPCT95;
RUN;
DATA CDC1.INTERVAL1;
SET CDC1._CDCDATA_INT1;
BY PATID BMIPCT95;
IF BMIPCT95^=. THEN DO;
FIRSTPAT=FIRST.PATID;
FIRSTBMI=FIRST.BMIPCT95;
END;
BMIPCT951=BMIPCT95;
RUN;
PROC FREQ DATA=CDC1.INTERVAL1;
TABLE FIRSTPAT*FIRSTBMI;
RUN;
/*STEP 12A1:OUTPUT RECORDS FIRST RECORDS FROM INTERVAL 1*/
DATA CDC1.INTERVAL1A;
SET CDC1.INTERVAL1;
IF FIRSTPAT=1 AND FIRSTBMI=1 THEN OUTPUT;
RUN;
/*599 FIRST RECORDS FROM INTERVAL 1*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.INTERVAL1A;
QUIT;
/*STEP 12B:IDENTIFY FIRST RECORDS FROM INTERVAL2 DATASET*/
PROC SORT DATA=CDC1._CDCDATA_INT2;
BY PATID BMIPCT95;
RUN;
DATA CDC1.INTERVAL2;
SET CDC1._CDCDATA_INT2;
BY PATID BMIPCT95;
IF BMIPCT95^=. THEN DO;
FIRSTPAT=FIRST.PATID;
FIRSTBMI=FIRST.BMIPCT95;
END;
BMIPCT951=BMIPCT95;
RUN;
PROC FREQ DATA=CDC1.INTERVAL2;
TABLE FIRSTPAT*FIRSTBMI;
RUN;
/*STEP 12B1:OUTPUT RECORDS FIRST RECORDS FROM INTERVAL 2*/
DATA CDC1.INTERVAL2A;
SET CDC1.INTERVAL2;
IF FIRSTPAT=1 AND FIRSTBMI=1 THEN OUTPUT;
RUN;
/*761 FIRST RECORDS FROM INTERVAL 2*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.INTERVAL2A;
QUIT;
/*STEP 12C:IDENTIFY FIRST RECORDS FROM INTERVAL3 DATASET*/
PROC SORT DATA=CDC1._CDCDATA_INT3;
BY PATID BMIPCT95;
RUN;
DATA CDC1.INTERVAL3;
SET CDC1._CDCDATA_INT3;
BY PATID BMIPCT95;
IF BMIPCT95^=. THEN DO;
FIRSTPAT=FIRST.PATID;
FIRSTBMI=FIRST.BMIPCT95;
END;
BMIPCT953=BMIPCT95;
RUN;
PROC FREQ DATA=CDC1.INTERVAL3;
TABLE FIRSTPAT*FIRSTBMI;
RUN;
/*STEP 12C1:OUTPUT RECORDS FIRST RECORDS FROM INTERVAL 3*/
DATA CDC1.INTERVAL3A;
SET CDC1.INTERVAL3;
IF FIRSTPAT=1 AND FIRSTBMI=1 THEN OUTPUT;
RUN;
/*787 FIRST RECORDS FROM INTERVAL 3*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.INTERVAL3A;
QUIT;
/*STEP 12D:IDENTIFY FIRST RECORDS FROM INTERVAL4 DATASET*/
PROC SORT DATA=CDC1._CDCDATA_INT4;
BY PATID BMIPCT95;
RUN;
DATA CDC1.INTERVAL4;
SET CDC1._CDCDATA_INT4;
BY PATID BMIPCT95;
IF BMIPCT95^=. THEN DO;
FIRSTPAT=FIRST.PATID;
FIRSTBMI=FIRST.BMIPCT95;
END;
BMIPCT954=BMIPCT95;
RUN;
PROC FREQ DATA=CDC1.INTERVAL4;
TABLE FIRSTPAT*FIRSTBMI;
RUN;
/*STEP 12D1:OUTPUT RECORDS FIRST RECORDS FROM INTERVAL 4*/
DATA CDC1.INTERVAL4A;
SET CDC1.INTERVAL4;
IF FIRSTPAT=1 AND FIRSTBMI=1 THEN OUTPUT;
RUN;
/*293 FIRST RECORDS FROM INTERVAL 4 WHERE BMIPCT95 IS NOT MISSING*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.INTERVAL4A;
QUIT;
/*STEP 13:APPEND CDC_INTERVAL1 CDC_INTERVAL2 CDC_INTERVAL3 CDC_INTERVAL4*/
DATA CDC1.TOTAL;
	SET CDC1.INTERVAL1A CDC1.INTERVAL2A CDC1.INTERVAL3A CDC1.INTERVAL4A;
RUN;
/*CHECK UNIQUE PATIENTS FROM NEWLY APPENDED DATA SET CDC.TOTAL N=1583*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.TOTAL;
QUIT; 
/*STEP 14:ASSIGN SEQUENTIAL ID */
PROC SORT DATA=CDC1.TOTAL;
BY PATID;
RUN;
DATA CDC1.TOTAL1;
SET CDC1.TOTAL;
BY PATID;
IF FIRST.PATID THEN ENCOUNTER=1;
ELSE ENCOUNTER +1;
RUN;
/*STEP 15:REMOVE OUTLYING VARIABLES */
DATA CDC1.TOTAL2;
SET CDC1.TOTAL1;
IF BMIPCT95<105 THEN OUTPUT;
RUN;

/*STEP 16A: CREATE DERIVED VARIABLES--WILL NEED FOR WIDE DATA SET*/
DATA CDC1.TOTAL3;   
    SET CDC1.TOTAL2;
    format RaceCat $50. ;
    If Hispanic = 'Y' then RaceCat = "Hispanic" ;
        else IF RACE = '01' then RaceCat = "NH American Indian or Alaska Native" ;
        else IF RACE =  '02' then RaceCat = "NH Asian" ;
        else IF RACE='03' THEN RaceCat= "NH Black or African American" ;
        else IF RACE = '04' THEN RaceCat = "NH Native Hawaiian or Other Pacific Islander" ;
        else IF RACE='05' THEN RaceCat= "NH White" ;
        else IF RACE = '06' then RaceCat= "NH Multiple Race" ;
        else IF RACE in ('07', 'NI', 'UN', 'OT') then RaceCat= "NH Other" ;
       
 
IF BMIPCT95<85 THEN BMICAT=1;
IF 95>BMIPCT95>=85 THEN BMICAT=2;
IF BMIPCT95>=95 THEN BMICAT=3;
RUN;
 /*STEP 16B: DESCRIPTIVE STATISTICS OF RACE AND ETHNICITY FOR T-TEST POPULATION*/
PROC FREQ DATA=CDC1.TOTAL3;
TABLE RACECAT;
RUN;
/*STEP 17:TRANSFORM INTO WIDE FILE*/
/*STEP 17A. SORT CDC.TOTAL3 BY PATID*/
PROC SORT DATA=CDC1.TOTAL3;
BY PATID;
RUN;
/*TRASPOSE STATEMENT TO TRANSFORM INTO WIDE FILE ON VARIABLE BMIPCT95*/
PROC TRANSPOSE DATA=CDC1.TOTAL3 OUT=CDC1.TOTALWIDE PREFIX=WT;
BY PATID;
VAR BMIPCT95;
RUN;
/*STEP18A:IDENTIFY NUMBER OF PATIENTS WITH RECORDS IN ALL FOUR INTERVAL N=20
SAMPLE SIZE TOO SMALL 
*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID))AS PATIENTS 
	FROM CDC1.TOTALWIDE
	WHERE WT1^=. AND WT2^=. AND WT3^=. AND WT4^=.;
QUIT;
/*STEP 18B:IDENTIFY NUMBER OF PATIENTS WITH RECORDS FIRST THREE INTERVAL N=129
SAMPLE SIZE LARGE ENOUGH TO CONDUCT RANDOM EFFECTS MODEL  
*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID))AS PATIENTS 
	FROM CDC1.TOTALWIDE
	WHERE WT1^=. AND WT2^=. AND WT3^=.;
QUIT;
/*STEP 18C: IDENTIFY NUMBER OF PATIENTS WITH RECORDS IN THE FIRST TWO INTERVALS N=475
COULD PERFORM PAIRED T-TEST 
*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID))AS PATIENTS 
	FROM CDC1.TOTALWIDE
	WHERE WT1^=. AND WT2^=. ;
QUIT;
/*PROCEED WITH PAIRD T-TEST FIRST*/

/*STEP 19A:PATID LIST OF PATIENTS WITH POPULATED WT1 AND WT2 DATA*/
PROC SQL;
	CREATE TABLE CDC1.TTEST1 AS
	SELECT PATID, WT1, WT2
	FROM CDC1.TOTALWIDE
	WHERE WT1^=. AND WT2^=. ;
QUIT;
/*STEP 19B:CREATE T-TEST DATASET ON PATIENTS WITH POPULATED WT1 AND WT2 RECORDS*/
/*STEP 19B1: SORT CDC.TTEST1*/
PROC SORT DATA=CDC1.TTEST1;
BY PATID;
RUN;
/*STEP 19B2: SORT CDC.TOTAL3*/
PROC SORT DATA=CDC1.TOTAL3;
BY PATID;
RUN;
/*STEP 19B3:MERGE PATIDS OF PATIENTS WITH POPULATED WT1 AND WT2 RECORDS WITH STUDY DATA */
DATA CDC1.TTEST1AA;
MERGE CDC1.TTEST1 (IN=A) CDC1.TOTAL3 (IN=B);
BY PATID;
IF A;
RUN;
/*CHECK NUMBER OF UNIQUE PATIETNS IN NEWLY CREATED DATASET CDC.TEST1AA*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.TTEST1AA;
QUIT;
/*STEP 20: RE-CREATE DEMOGRAPHIC VARIABLE CATEGORIES AS DATASET IS WIDE AND NOT LONG*/
DATA CDC1.TTEST11AB;
SET CDC1.TTEST1AA;

IF WT1 THEN DO;
IF WT1<85 THEN BMICAT1=1;
IF 95>WT1>=85 THEN BMICAT1=2;
IF WT1>=95 THEN BMICAT1=3;
END;

IF WT2 THEN DO;
IF WT2<85 THEN BMICAT2=1;
IF 95>WT2>=85 THEN BMICAT2=2;
IF WT2>=95 THEN BMICAT2=3;
END;

RUN;
/*STEP 20: PAIRED T-TEST COMPARING DIFFERENCE IN BMIPCT95 BETWEEN INTERVAL1 AND INTERVAL2*/
PROC TTEST DATA=CDC1.TTEST11AB ALPHA=0.05 H0=0;
TITLE "PAIRED SAMPLE T-TEST OF WEIGHT TAKEN AT INTERVAL 1 VS. INTERVAL 3";
PAIRED WT1*WT2;
RUN;
/*STEP 21: DEMOGRAPHIC VARIABLES FOR T-TEST (STUDY GROUP 1)*/
PROC FREQ DATA=CDC1.TTEST1AA;
TABLE RACECAT HISPANIC SEX ;
RUN;
PROC MEANS DATA=CDC1.TTEST1AA;
VAR WT1 WT2 AGE;
RUN;
PROC FREQ DATA=CDC1.TTEST11AB;
TABLE BMICAT1 BMICAT2;
RUN;
PROC SQL;
	SELECT AVG(AGE), STD(AGE), STDERR(AGE), MIN(AGE), MAX(AGE) 
	FROM CDC1.TTEST1AA;
QUIT;
/*RANDOM EFFECTS PREPARATION*/
/*STEP 22: PULL PATID RECORDS WHERE ALL ARE POPULATED--NEED LONG FILE, NO NEED TO PULL WT1, WT2 AND WT3 VALUES*/
PROC SQL;
	CREATE TABLE CDC1.MIXED AS SELECT
	PATID
	FROM CDC.TOTALWIDE
	WHERE WT1^=. AND WT2^=. AND WT3^=.;
QUIT;
/*STEP 23:MERGE PATIENTS WITH WT1,WT2 AND WT3 VALUES POPULATED WITH REMAINING STUDY DATA*/
/*STEP 23A: SORT CDC.MIXED*/
PROC SORT DATA=CDC1.MIXED;
BY PATID;
RUN;
/*STEP 23B: MERGE CDC.MIXED AND CDC.TOTAL3*/
DATA CDC1.MIXED1;
MERGE CDC1.MIXED(IN=A) CDC1.TOTAL3;
BY PATID;
IF A;
RUN;
/*CHECK NEWLY CREATED DATASET CDC.MIXED1 N=129*/
PROC SQL;
	SELECT COUNT (DISTINCT (PATID)) AS PATIENTS
	FROM CDC1.MIXED1;
QUIT;
/*Step 23 C--REMOVE DUPLICATES, RUN DEMOGRAPHIC*/
PROC SORT DATA=CDC1.MIXED1 OUT=CDC1.MIXED2 NODUPKEY DUPOUT=DUPLICATE;
BY PATID;
RUN;
/*step 24A DEMOGRAPHIC CATEGORIES ON THE DE-DUPLICATED LONG FILE */
DATA CDC1.MIXED3;
SET CDC1.MIXED2;
    format RaceCat $50. ;
    If Hispanic = 'Y' then RaceCat = "Hispanic" ;
        else IF RACE = '01' then RaceCat = "NH American Indian or Alaska Native" ;
        else IF RACE =  '02' then RaceCat = "NH Asian" ;
        else IF RACE='03' THEN RaceCat= "NH Black or African American" ;
        else IF RACE = '04' THEN RaceCat = "NH Native Hawaiian or Other Pacific Islander" ;
        else IF RACE='05' THEN RaceCat= "NH White" ;
        else IF RACE = '06' then RaceCat= "NH Multiple Race" ;
        else IF RACE in ('07', 'NI', 'UN', 'OT') then RaceCat= "NH Other" ;
RUN;
/*STEP 24B: DESCRIPTIVE STATISTICS FOR RACE/ETHNICITY */
PROC FREQ DATA=CDC1.MIXED3;
TABLE RACECAT;
RUN;
/*STEP 25: MERGE THE LONG DE-DUPLICATED DATA FILE BACK WITH REMAINING DATA FOR RANDOM EFFECTS MODEL*/
DATA CDC1.MIXED4;
MERGE CDC1.MIXED3(IN=A) CDC1.TOTAL3;
BY PATID;
IF A;
RUN;
/*STEP 26: MIXED LINEAR MODEL-->RANDOM EFFECTS*/
/*INTERCEPT IS RANDOM EFFECT*/
PROC MIXED DATA=CDC1.MIXED1 ;
CLASS PATID INTERVAL RACECAT SEX ;
MODEL BMIPCT95=INTERVAL RACECAT  SEX AGE/S;
RANDOM INTERCEPT /TYPE=UN SUBJECT=PATID;
RUN;
/*STEP 27: DESCRIPTIVE STATISTICS FOR WIDE POPULATION */
PROC SQL;
	SELECT AVG(AGE), STD(AGE), STDERR(AGE), MIN(AGE), MAX(AGE) 
	FROM CDC1.MIXED1;
QUIT;
/*STEP 27A: DESCRIPTIVE STATISTICS FOR INTERVAL 1*/
PROC SQL;
	SELECT COUNT (BMIPCT95), AVG(BMIPCT95), STD(BMIPCT95), MIN(BMIPCT95), MAX(BMIPCT95)
	FROM CDC1.MIXED1
	WHERE INTERVAL=1;
QUIT;
PROC FREQ DATA=CDC1.MIXED1;
TABLE BMICAT;
WHERE INTERVAL=1;
RUN;
/*STEP 27B: DESCRIPTIVE STATISTICS FOR INTERVAL 2*/
PROC SQL;
	SELECT COUNT (BMIPCT95), AVG(BMIPCT95), STD(BMIPCT95), MIN(BMIPCT95), MAX(BMIPCT95)
	FROM CDC1.MIXED1
	WHERE INTERVAL=2;
QUIT;
PROC FREQ DATA=CDC1.MIXED1;
TABLE BMICAT;
WHERE INTERVAL=2;
RUN;
/*STEP 27C: DESCRIPTIVE STATISTICS FOR INTERVAL 3*/
PROC SQL;
	SELECT COUNT (BMIPCT95), AVG(BMIPCT95), STD(BMIPCT95), MIN(BMIPCT95), MAX(BMIPCT95)
	FROM CDC1.MIXED1
	WHERE INTERVAL=3;
QUIT;
PROC FREQ DATA=CDC1.MIXED1;
TABLE BMICAT;
WHERE INTERVAL=3;
RUN;
/*STEP 27D: DESCRIPTIVE STATISTICS FOR INTERVAL 4*/
PROC SQL;
	SELECT COUNT (BMIPCT95), AVG(BMIPCT95), STD(BMIPCT95), MIN(BMIPCT95), MAX(BMIPCT95)
	FROM CDC1.MIXED1
	WHERE INTERVAL=4;
QUIT;
PROC FREQ DATA=CDC1.MIXED1;
TABLE BMICAT;
WHERE INTERVAL=4;
RUN;
